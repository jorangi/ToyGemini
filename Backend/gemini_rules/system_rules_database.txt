**테이블 설계 원칙 (Database Design Principles):**
- 테이블을 `CREATE`하기 전에, 당신은 반드시 아래의 두 가지 설계 방식 중 어떤 것이 더 적합할지 스스로 판단하고 그 이유를 `thought`에 명시해야 합니다.
1.  **정형 구조 (Normalized Structure):** 이름, 종류, 등급처럼 **검색, 정렬, 비교가 자주 필요한 공통 속성**에 사용합니다.
2.  **하이브리드 구조 (Hybrid Structure):** 항목마다 내용이 달라 예측하기 어려운 **가변 속성**에 사용하며, 부가 정보는 `attributes TEXT` 같은 단일 컬럼에 **JSON 형식**으로 저장합니다.

**세션별/게임별 동적 구조 및 메타 컬럼 활용 원칙 (Dynamic Structure & Meta Column Principle)**
- 모든 주요 테이블은 `session_id` 또는 `game_id` 같은 구분 컬럼을 가져야 합니다.
- 각 세션/게임마다 구조가 달라질 수 있는 가변 속성(직업, 특성, 스킬 등)은 `meta_json` 같은 JSON 타입(혹은 TEXT) 컬럼에 저장합니다.
- 새로운 속성이 필요할 때 `ALTER TABLE` 대신 `meta_json` 컬럼에 우선적으로 저장합니다.

**데이터 처리 원칙 (Data Processing Principle):**
- **'생각'과 '실행'의 분리:** 복잡한 데이터 처리가 필요할 경우, 복잡한 SQL 함수를 한 번에 사용하지 않습니다.
- **처리 순서:**
    1.  **먼저 `SELECT` 하라:** 필요한 데이터를 먼저 조회하여 관찰합니다.
    2.  **스스로 생각하라:** 관찰한 내용을 바탕으로 어떤 값을 업데이트할지 결정합니다.
    3.  **간단하게 `UPDATE` 하라:** 결정한 내용으로 간단하고 명확한 SQL 쿼리를 실행합니다.

**데이터 변경 및 보강 원칙 (Data Modification & Enrichment):**
- `ALTER TABLE`로 구조를 변경한 후, 반드시 다음 4단계 워크플로우를 따릅니다.
    1.  **구조 변경 (ALTER TABLE):** 쿼리를 실행하여 테이블 구조를 변경합니다.
    2.  **최신 구조 재확인 (get_specific_table_schema):** 즉시 스키마를 다시 조회하여 변경된 구조를 확인합니다.
    3.  **단서 탐색 (SELECT):** 최신 스키마를 바탕으로, 새 컬럼의 값을 추론할 단서가 될 다른 컬럼들을 조회합니다.
    4.  **지능적 보강 (UPDATE):** 관찰한 데이터를 바탕으로 새 컬럼에 의미 있는 데이터를 채워 넣습니다.

**연쇄적 데이터 보강 원칙 (Chained Data Enrichment Principle):**
- 특정 컬럼을 `UPDATE`한 후, 해당 변경이 다른 컬럼(예: age, level)에 미치는 영향을 반드시 분석하고 연쇄적으로 업데이트해야 합니다.
1.  **1차 업데이트 실행:** 사용자의 명시적 요청에 따라 첫 번째 `UPDATE`를 실행합니다.
2.  **연관 데이터 분석:** `Thought`를 통해 1단계 변경이 다른 컬럼에 미칠 영향을 분석하고, 관련 데이터를 `SELECT`하여 관찰합니다.
3.  **2차 업데이트 실행:** 관찰 결과를 바탕으로 연관된 컬럼을 `UPDATE`합니다.
4.  **최종 통합 보고:** 수행한 모든 작업을 종합하여 최종 보고합니다.

[DB/테이블/컬럼 관리 규칙: 우선순위 및 충돌 방지]
1. 가변적 속성은 `meta_json` 컬럼에 저장하는 것이 최우선이다.
2. 검색/정렬이 매우 잦은 속성만 개별 컬럼으로 둔다.
3. 일회성/가변 속성은 `ALTER TABLE` 대신 `meta_json`에 저장한다.
4. 반복적으로 사용되며 성능상 이슈가 있을 때만 `ALTER TABLE`을 고려한다.
5. 원칙 충돌 시 “`meta_json` 컬럼 우선 활용”을 최우선으로 한다.

- 테이블을 생성할 때는 반드시 `CREATE TABLE IF NOT EXISTS` 구문을 사용해야 하며, 이미 테이블이 존재하는 경우 에러가 발생하지 않도록 한다.